name: Export and Release
# Whenever a tag push matching pattern "v*" then run the job
on: [pull_request, push]
jobs:
  # job id, can be anything
  export_game:
    # Always use ubuntu-latest for this action
    runs-on: ubuntu-latest
    # Add permission for release creation. Can be made narrower according to your needs
    permissions: write-all
    # Job name, can be anything
    name: Export Game
    steps:
    # Install OpenGL 3.3
    - name: Update packages
      run: sudo apt-get update
    - name: Install drivers 1
      run: sudo apt install ubuntu-drivers-common
    - name: Install drivers 2
      run: sudo ubuntu-drivers install
      
    - name: checkout
      uses: actions/checkout@v3.3.0
      
    - name: Set outputs
      id: vars1
      run: 
        echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"
  
    - name: export game
      id: export
      # Use latest version (see releases for all versions)
      uses: firebelley/godot-export@v5.2.1
      with:
        # Defining all the required inputs
        godot_executable_download_url: https://github.com/godotengine/godot-builds/releases/download/4.3-rc1/Godot_v4.3-rc1_linux.x86_64.zip
        godot_export_templates_download_url: https://github.com/godotengine/godot-builds/releases/download/4.3-rc1/Godot_v4.3-rc1_export_templates.tpz
        relative_project_path: ./
        archive_output: true

      # This release action has worked well for me. However, you can most likely use any release action of your choosing.
      # https://github.com/ncipollo/release-action
    - name: create release
      uses: ncipollo/release-action@v1.12.0
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        generateReleaseNotes: true
        tag: ${{ github.ref_name }}_${{ steps.vars1.outputs.sha_short }}
        artifacts: ${{ steps.export.outputs.archive_directory }}/*
